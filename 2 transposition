import math

def encrypt(plaintext, key):
    ciphertext = [''] * key
    for column in range(key):
        pointer = column
        while pointer < len(plaintext):
            ciphertext[column] += plaintext[pointer]
            pointer += key
    return ''.join(ciphertext)

def decrypt(ciphertext, key):
    plaintext = [''] * math.ceil(len(ciphertext) / key)
    numRows = math.ceil(len(ciphertext) / key)
    numCols = key
    numShaded = (numCols * numRows) - len(ciphertext)
    col = 0
    row = 0
    for symbol in ciphertext:
        plaintext[row] += symbol
        row += 1
        if (row == numRows) or (row == numRows - 1 and col >= numCols - numShaded):
            row = 0
            col += 1
    return ''.join(plaintext)

# Example usage
plaintext = "hello world"
key = 4
ciphertext = encrypt(plaintext, key)
decrypted_text = decrypt(ciphertext, key)

print(f"Plaintext: {plaintext}")
print(f"Ciphertext: {ciphertext}")
print(f"Decrypted text: {decrypted_text}")
